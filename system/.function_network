#!/usr/bin/env bash

# Start a web server in the specified directory (default: current directory)

srv() {
  local DIR=${1:-.}
  local AVAILABLE_PORT=$(get-port)
  local PORT=${2:-$AVAILABLE_PORT}
  if [ "$PORT" -le 1024 ]; then
    sudo -v
  fi
  open "http://localhost:$PORT"
  superstatic "$DIR" -p "$PORT"
}

# Get IP address from hostname

hostname2ip() {
  ping -c 1 "$1" | grep -oE '([0-9]{1,3}\.){3}[0-9]{1,3}' | head -1
}

# Unshorten a shortened URL

unshorten() {
  curl -sIL "$1" | grep -i '^Location:' | tail -1 | sed 's/Location: *//'
}

# Show all the names (CNs and SANs) listed in the SSL certificate for a given domain

getcertnames() {
  if [ -z "$1" ]; then
    echo "ERROR: No domain specified."
    return 1
  fi

  local domain="$1"
  echo "Testing ${domain}â€¦"
  echo "" # newline

  local tmp
  tmp=$(echo -e "GET / HTTP/1.0\nEOT" |
    openssl s_client -connect "${domain}:443" -servername "${domain}" 2>&1)

  if [[ "${tmp}" = *"-----BEGIN CERTIFICATE-----"* ]]; then
    local certText
    certText=$(echo "${tmp}" |
      openssl x509 -text -certopt "no_aux,no_header,no_issuer,no_pubkey,no_serial,no_sigdump,no_signame,no_validity,no_version")
    echo "Common Name:"
    echo "" # newline
    echo "${certText}" | grep "Subject:" | sed -e "s/^.*CN=//" | sed -e "s/\/emailAddress=.*//"
    echo "" # newline
    echo "Subject Alternative Name(s):"
    echo "" # newline
    echo "${certText}" | grep -A 1 "Subject Alternative Name:" | sed -e "2s/DNS://g" -e "s/ //g" | tr "," "\n" | tail -n +2
    return 0
  else
    echo "ERROR: Certificate not found."
    return 1
  fi
}
