[main]

# Enables context-sensitive auto-completion. If this is disabled, all possible completions will be listed.
smart_completion = True

# Display the completions in several columns. (More completions will be visible.)
wider_completion_menu = False

# Multi-line mode allows breaking up the SQL statements into multiple lines.
# If this is set to True, then the end of the statements must have a semicolon.
# If this is set to False, then SQL statements can't be split into multiple lines. End of line (return) is considered as the end of the statement.
multi_line = True

# Multi-line mode settings
multi_line_mode = safe

# Destructive warning mode will alert you before executing a SQL statement that may cause harm to the database such as "drop table", "drop database" or "shutdown".
destructive_warning = False

# Expand mode settings
expand = False
auto_expand = False

# Table alias generation
generate_aliases = True

# Log file location
log_file = default

# Keyword casing preference
keyword_casing = upper

# Casing file location
casing_file = default
generate_casing_file = False
case_column_headers = True

# History file location
history_file = default

# Default log level
log_level = INFO

# Order of columns when expanding * to column list
asterisk_column_order = table_order

# Column qualification
qualify_columns = if_more_than_one_table

# Schema suggestions
search_path_filter = False

# Default pager
pager = less -SRXF

# Timing of SQL statements and table rendering
timing = True

# Table format
table_format = fancy_grid

# Syntax style
syntax_style = paraiso-dark

# Keybindings
vi = True

# Error handling
on_error = STOP

# Row limit prompt
row_limit = 1000

# Skip intro and goodbye messages
less_chatty = True

# Postgres prompt
prompt = "\u@\h:\d> "

# Suggestion menu lines
min_num_menu_lines = 4

# Multiline continuation character
multiline_continuation_char = ""

# Null string representation
null_string = <null>

# Pager management
enable_pager = True

# Keyring for password management
keyring = True

[colors]
completion-menu.completion.current = "bg:#ffffff #000000"
completion-menu.completion = "bg:#008888 #ffffff"
completion-menu.meta.completion.current = "bg:#44aaaa #000000"
completion-menu.meta.completion = "bg:#448888 #ffffff"
completion-menu.multi-column-meta = "bg:#aaffff #000000"
scrollbar.arrow = "bg:#003333"
scrollbar = "bg:#00aaaa"
selected = "#ffffff bg:#6666aa"
search = "#ffffff bg:#4444aa"
search.current = "#ffffff bg:#44aa44"
bottom-toolbar = "bg:#222222 #aaaaaa"
bottom-toolbar.off = "bg:#222222 #888888"
bottom-toolbar.on = "bg:#222222 #ffffff"
search-toolbar = noinherit bold
search-toolbar.text = nobold
system-toolbar = noinherit bold
arg-toolbar = noinherit bold
arg-toolbar.text = nobold
bottom-toolbar.transaction.valid = "bg:#222222 #00ff5f bold"
bottom-toolbar.transaction.failed = "bg:#222222 #ff005f bold"

# Style classes for colored table output
output.header = "#00ff5f bold"
output.odd-row = ""
output.even-row = ""
Token.Menu.Completions.Completion.Current = "bg:#ffffff #000000"
Token.Menu.Completions.Completion = "bg:#008888 #ffffff"
Token.Menu.Completions.Meta.Current = "bg:#44aaaa #000000"
Token.Menu.Completions.Meta = "bg:#448888 #ffffff"
Token.Menu.Completions.MultiColumnMeta = "bg:#aaffff #000000"
Token.Menu.Completions.ProgressButton = "bg:#003333"
Token.Menu.Completions.ProgressBar = "bg:#00aaaa"
Token.SelectedText = "#ffffff bg:#6666aa"
Token.SearchMatch = "#ffffff bg:#4444aa"
Token.SearchMatch.Current = "#ffffff bg:#44aa44"
Token.Toolbar = "bg:#222222 #aaaaaa"
Token.Toolbar.Off = "bg:#222222 #888888"
Token.Toolbar.On = "bg:#222222 #ffffff"
Token.Toolbar.Search = noinherit bold
Token.Toolbar.Search.Text = nobold
Token.Toolbar.System = noinherit bold
Token.Toolbar.Arg = noinherit bold
Token.Toolbar.Arg.Text = nobold
Token.Toolbar.Transaction.Valid = "bg:#222222 #00ff5f bold"
Token.Toolbar.Transaction.Failed = "bg:#222222 #ff005f bold"
Token.Output.Header = "#00ff5f bold"
Token.Output.OddRow = ""
Token.Output.EvenRow = ""

[named queries]
longrunning = '''SELECT pid, now() - query_start as "runtime", usename, datname, wait_event, state, query
                               FROM  pg_stat_activity
                               WHERE now() - query_start > '2 minutes'::interval and state = 'active'
                              ORDER BY runtime DESC'''
idletransaction = '''SELECT pid, now() - query_start as "runtime", usename, datname, wait_event, state, query
                               FROM  pg_stat_activity
                               WHERE now() - query_start > '2 minutes'::interval and state = 'idle in transaction'
                              ORDER BY runtime DESC'''
active_connections = '''select max_conn,used,res_for_super,max_conn-used-res_for_super remaining_conn from (select count(*) used from pg_stat_activity) t1,
(select setting::int res_for_super from pg_settings where name=$$superuser_reserved_connections$$) t2,
  (select setting::int max_conn from pg_settings where name=$$max_connections$$) t3'''

[alias_dsn]
local = postgresql://postgres@localhost:5432/postgres

[data_formats]
decimal = d
float = g
