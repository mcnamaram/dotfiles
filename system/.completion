#!/usr/bin/env bash

# bash

if is-executable brew; then
  BREW_PREFIX=$(brew --prefix)

  if [ -f "$BREW_PREFIX/etc/bash_completion.d/git-completion.bash" ]; then
    source "$BREW_PREFIX/etc/bash_completion.d/git-completion.bash"
  fi
  if [ -f "$BREW_PREFIX/etc/bash_completion.d/git-prompt.sh" ]; then
    source "$BREW_PREFIX/etc/bash_completion.d/git-prompt.sh"
  fi

  source "$BREW_PREFIX/share/bash-completion/bash_completion"
  unset BREW_PREFIX
fi

# Dotfiles

_dotfiles_completions() {
  local cur="${COMP_WORDS[COMP_CWORD]}"
  COMPREPLY=($(compgen -W 'clean dock edit help macos test update' -- $cur))
}

if [ -n "$BASH_VERSION" ]; then
  complete -o default -F _dotfiles_completions dotfiles
  # npm completion
  (is-executable npm) && source <(npm completion)

  # kube related
  (is-executable minikube) && source <(minikube completion bash)
  (is-executable kubectl) && source <(kubectl completion bash)
  (is-executable helm) && source <(helm completion bash)
  (is-executable kubectl-testkube) && source <(kubectl-testkube completion bash)

  (is-executable poetry) && eval "$(poetry completions bash)"

elif [ -n "$ZSH_VERSION" ]; then
  compdef _dotfiles_completions dotfiles

  # npm completion
  (is-executable npm) && source <(npm completion zsh)

  # kube related
  (is-executable minikube) && source <(minikube completion zsh)
  (is-executable kubectl) && source <(kubectl completion zsh)
  (is-executable helm) && source <(helm completion zsh)
  (is-executable kubectl-testkube) && source <(kubectl-testkube completion zsh)

  (is-executable poetry) && eval "$(poetry completions zsh)"
fi

# nvm

if [ -s "$NVM_DIR/bash_completion" ]; then
  source "$NVM_DIR/bash_completion"
fi
