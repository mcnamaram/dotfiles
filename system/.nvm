#!/usr/bin/env bash

# Set up NVM
export NVM_DIR="$HOME/.nvm"
if [ -f "$NVM_DIR/nvm.sh" ]; then
  source "$NVM_DIR/nvm.sh"
fi

# Function to find a file up the directory tree
find-up() {
  local path=$(pwd)
  while [[ "$path" != "" && ! -e "$path/$1" ]]; do
    path=${path%/*}
  done
  echo "$path"
}

# Function to change directory and use the appropriate Node version
cdnvm() {
  cd "$@" || return

  local nvm_path=$(find-up .nvmrc | tr -d '\n')

  # If there is no .nvmrc file, use the default nvm version
  if [[ -z "$nvm_path" ]]; then
    local default_version=$(nvm version default)
    if [[ "$default_version" == "N/A" ]]; then
      nvm alias default node
      default_version=$(nvm version default)
    fi
    if [[ "$(nvm current)" != "$default_version" ]]; then
      nvm use default
    fi
  elif [[ -s "$nvm_path/.nvmrc" && -r "$nvm_path/.nvmrc" ]]; then
    local nvm_version=$(<"$nvm_path/.nvmrc")
    local locally_resolved_nvm_version=$(nvm ls --no-colors "$nvm_version" | tail -1 | tr -d '\->*' | tr -d '[:space:]')

    if [[ "$locally_resolved_nvm_version" == "N/A" ]]; then
      nvm install "$nvm_version"
    elif [[ "$(nvm current)" != "$locally_resolved_nvm_version" ]]; then
      nvm use "$nvm_version"
    fi
  fi
}

# Alias cd to cdnvm to automatically switch Node versions
alias cd='cdnvm'
